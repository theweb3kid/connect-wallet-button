"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react");function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=o(e);!function(e,o){void 0===o&&(o={});var t=o.insertAt;if(e&&"undefined"!=typeof document){var n=document.head||document.getElementsByTagName("head")[0],a=document.createElement("style");a.type="text/css","top"===t&&n.firstChild?n.insertBefore(a,n.firstChild):n.appendChild(a),a.styleSheet?a.styleSheet.cssText=e:a.appendChild(document.createTextNode(e))}}('.connect-button{background:#111;border:none;border-radius:10px;color:#fff;cursor:pointer;height:50px;outline:none;position:relative;width:220px;z-index:0}.connect-button:before{animation:glowing 20s linear infinite;background:linear-gradient(45deg,red,#ff7300,#fffb00,#48ff00,#00ffd5,#002bff,#7a00ff,#ff00c8,red);background-size:400%;border-radius:10px;content:"";filter:blur(5px);height:calc(100% + 4px);left:-2px;opacity:0;position:absolute;top:-2px;transition:opacity .3s ease-in-out;width:calc(100% + 4px);z-index:-1}.connect-button:active{color:#000}.connect-button:active:after{background:transparent}.connect-button:hover:before{opacity:1}.connect-button:after{background:#111;border-radius:10px;content:"";height:100%;left:0;position:absolute;top:0;width:100%;z-index:-1}@keyframes glowing{0%{background-position:0 0}50%{background-position:400% 0}to{background-position:0 0}}');exports.Button=({isEVM:o})=>{const[n,a]=e.useState(""),[c,i]=e.useState("Connect Wallet");let s;if(0==o){const o=async()=>{try{const{solana:e}=window;if(e&&e.isPhantom){console.log("Phantom Wallet Exist");const o=await e.connect({onlyIfTrusted:!0});console.log("Connected with Public Key:",o.publicKey.toString()),a(o.publicKey.toString())}else console.log("Download Phantom"),i("Download Phantom Wallet")}catch(e){console.log(e)}},t=async()=>{try{const{solana:e}=window;if(e&&e.isPhantom){console.log("Phantom Wallet Exist");const o=await e.connect();console.log("Connected with Public Key:",o.publicKey.toString()),a(o.publicKey.toString()),i("Connected To: "+n)}else console.log("Download Phantom"),i("Download Phantom Wallet")}catch(e){console.log(e)}};e.useEffect((()=>{const e=async()=>{await o()};return window.addEventListener("load",e),()=>window.removeEventListener("load",e)}),[]),s=t}else if(1==o){const o=async()=>{const{ethereum:e}=window;if(e){i("Connecting...");const o=await e.request({method:"eth_requestAccounts"});if(0!==o.length){const e=o[0];i("Connected To: "+e),console.log("Connected To: ",e)}else console.log("Please authorize an account")}else console.log("Make sure you have MetaMask"),i("Download MetaMask")},t=async()=>{const{ethereum:e}=window;if(!e)return console.log("Make sure you have MetaMask"),void i("Download MetaMask");console.log("We have the ethereumn object",e);const o=await e.request({method:"eth_accounts"});if(0!==o.length){const e=o[0];console.log("Found an authorized account: ",e)}else console.log("No authorized accoutn found");const t=await e.request({method:"eth_chainId"});console.log("Chain ID: ",t),e.on("chainChanged",handleChainChanged)};e.useEffect((()=>{const e=async()=>{await t()};return window.addEventListener("load",e),()=>window.removeEventListener("load",e)}),[]),s=o}return t.default.createElement("button",{className:"connect-button",onClick:s},c)};
